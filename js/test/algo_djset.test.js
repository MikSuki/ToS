const func = require('../algo_djset');

function createBeads(input) {
    return input.map(v => { return { type: v } });
}

function pass({m, n, input, ans}) {
    const beads = createBeads(input);
    const res = func(m, n, beads);
    expect(res).toEqual(ans);
}

const testData = {
    'column-1': {
        m: 3,
        n: 3,
        input:[
            0, 1, 2,
            0, 1, 2,
            0, 1, 2
        ],
        ans: [
            0, 1, 2,
            0, 1, 2,
            0, 1, 2
        ]
    },
    'column-2': {
        m: 3,
        n: 3,
        input:[
            0, 0, 2,
            0, 0, 2,
            0, 0, 2
        ],
        ans: [
            0, 0, 2,
            0, 0, 2,
            0, 0, 2
        ]
    },
    'column-3': {
        m: 5, 
        n: 6,
        input: [
            0,  1,  2,  4,  4,  4,
            6,  7,  4,  4,  4, 11,
            2,  2,  2,  2,  2, 17,
           18,  2,  2,  2, 22, 23,
           24, 25, 26, 27, 28, 29
        ],
        ans: [
            0,  1,  2,  3,  3,  3,
            6,  7,  3,  3,  3, 11,
           12, 12, 12, 12, 12, 17,
           18, 12, 12, 12, 22, 23,
           24, 25, 26, 27, 28, 29
        ]
    },
    'row-1': {
        m: 3,
        n: 3,
        input:[
            0, 0, 0,
            1, 1, 1,
            2, 2, 2
        ],
        ans: [
            0, 0, 0,
            3, 3, 3,
            6, 6, 6
       ]
    },
    'row-2': {
        m: 5, 
        n: 6,
        input: [
            0,  1,  4,  3,  4,  5,
            6,  7,  4,  3,  3, 11,
           12,  4,  4,  3,  3, 17,
           18,  4,  5, 21,  3, 23,
           24,  4,  5, 27, 28, 29
        ],
        ans: [
            0,  1,  2,  3,  4,  5,
            6,  7,  2,  3,  3, 11,
           12,  2,  2,  3,  3, 17,
           18,  2, 20, 21,  3, 23,
           24,  2, 26, 27, 28, 29
        ]
    },
    'cross-1': {
        m: 3, 
        n: 3,
        input: [
            0, 1, 0,
            1, 1, 1,
            0, 1, 0
        ],
        ans: [
            0, 1, 2,
            1, 1, 1,
            6, 1, 8
        ]
    },
    'cross-2': {
        m: 3, 
        n: 3,
        input: [
            1, 1, 1,
            1, 1, 1,
            0, 1, 0
        ],
        ans: [
            0, 0, 0,
            0, 0, 0,
            6, 0, 8
        ]
    },
    'cross-3': {
        m: 3, 
        n: 3,
        input: [
            0, 3, 0,
            3, 3, 3,
            3, 3, 3
        ],
        ans: [
            0, 1, 2,
            1, 1, 1,
            1, 1, 1
        ]
    },
    'many-1': {
        m: 5, 
        n: 6,
        input: [
            12, 12, 12,  3,  4,  5,
            12,  8,  8,  9,  8,  8,
            12, 13,  8,  8,  8, 17,
            12, 19,  8,  8,  8, 23,
            12, 25,  8,  8, 28, 29
         ],
        ans: [
             0,  0,  0,  3,  4,  5,
             0,  7,  8,  9,  8, 11,
             0, 13,  8,  8,  8, 17,
             0, 19,  8,  8,  8, 23,
             0, 25,  8,  8, 28, 29
         ]
    },
    'all-1': {
        m: 5, 
        n: 6,
        input: [
             0, 12,  5,  9,  4, 10,
             0, 12,  5,  9,  4, 10,
             0, 12,  5,  9,  4, 10,
            13, 13, 13,  8,  8,  8,
            12, 12, 12, 20, 20, 20
         ],
        ans: [
             0,  1,  2,  3,  4,  5,
             0,  1,  2,  3,  4,  5,
             0,  1,  2,  3,  4,  5,
            18, 18, 18, 21, 21, 21,
            24, 24, 24, 27, 27, 27
         ]
    },
    'no-1': {
        m: 5, 
        n: 6,
        input: [
            0,  1,  2,  3,  4,  5,
            6,  7,  8,  9, 10, 11,
           12, 13, 14, 15, 16, 17,
           18, 19, 20, 21, 22, 23,
           24, 25, 26, 27, 28, 29
        ],
        ans: [
            0,  1,  2,  3,  4,  5,
            6,  7,  8,  9, 10, 11,
           12, 13, 14, 15, 16, 17,
           18, 19, 20, 21, 22, 23,
           24, 25, 26, 27, 28, 29
        ]
    },
    'no-2': {
        m: 5, 
        n: 6,
        input: [
            0,  1,  1,  3,  5,  5,
            0,  1,  8,  9, 10, 5,
           12, 13, 13, 15, 15, 17,
           12, 12, 13, 15, 15, 23,
           24, 25, 27, 27, 23, 23
        ],
        ans: [
            0,  1,  2,  3,  4,  5,
            6,  7,  8,  9, 10, 11,
           12, 13, 14, 15, 16, 17,
           18, 19, 20, 21, 22, 23,
           24, 25, 26, 27, 28, 29
        ]
    }
}


// const testData = {
//     'row-2': {
//         m: 5, 
//         n: 6,
//         input: [
//             0,  1,  2,  3,  4,  5,
//             6,  7,  8,  3,  3, 11,
//            12, 13, 14,  3,  3, 17,
//            18, 19, 20, 21,  3, 23,
//            24, 25, 26, 27, 28, 29
//         ],
//         ans: [
//             0,  1,  2,  3,  4,  5,
//             6,  7,  8,  3,  3, 11,
//            12, 13, 14,  3,  3, 17,
//            18, 19, 20, 21,  3, 23,
//            24, 25, 26, 27, 28, 29
//         ]
//     },
// }

        


for(const key in testData)
    test(key, () => pass(testData[key]))

